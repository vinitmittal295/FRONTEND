1. using rest operator function concept pass n no of arguments and get the maxium of it (forEach)
function findMax(...args) {
    let max = -Infinity;
    args.forEach(num => {
        if (num > max) {
            max = num;
        }
    });
    return max;
}

console.log(findMax(1, 2, 3, 4, 5, 6));

2.using rest operator function concept pass n no of arguments and get the minimum of it (reduce)

function findMin(...args) {
    return args.reduce((min, num) => {
        return num < min ? num : min;
    }, Infinity);
}

console.log(findMin(1, 2, 3, 4, 5, 6));

3.using rest operator function concept pass n no of arguments and get the sum of even numbers of it (forEach)

function sumOfEvenNumbers(...args) {
    let sum = 0;
    args.forEach(num => {
        if (num % 2 === 0) {
            sum += num;
        }
    });
    return sum;
}


console.log(sumOfEvenNumbers(1, 2, 3, 4, 5, 6));

4.using rest operator function concept pass n no of arguments and  get the sum of even numbers of it(reduce)

function sumOfEvenNumbers(...args) {
    return args.reduce((sum, num) => {
        if (num % 2 === 0) {
            return sum + num;
        }
        return sum;
    }, 0);
}

console.log(sumOfEvenNumbers(1, 2, 3, 4, 5, 6));
5.using rest operator function concept pass n no of arguments an get the sum of all prime numbers of it(reduce)

doubt

6.5.using rest operator function concept pass n no of character arguments an get the count of all vowels numbers of it.(forEach)

function countVowels(...args) {
    let vowelCount = 0;
    const vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    args.forEach(char => {
        if (vowels.includes(char)) {
            vowelCount++;
        }f
    });
    return vowelCount;
}

// Example usage:
console.log(countVowels('a', 'b', 'c', 'd', 'e', 'f', 'i', 'o', 'u')); // Output: 5